variables:
  - name: FORCE_COLOR
    value: 1

parameters:
  - name: shouldPublish
    type: boolean
    default: true
  - name: ExtensionPublishConfig
    type: object
    default:
      - key: 'tls-sync-vscode-ui-extension'
        vsixPath: 'dist/vsix/packaged.vsix'
        projectPath: '$(Build.SourcesDirectory)/vscode-extensions/tls-sync-vscode-ui-extension'
      - key: 'tls-sync-vscode-workspace-extension'
        vsixPath: 'dist/vsix/packaged.vsix'
        projectPath: '$(Build.SourcesDirectory)/vscode-extensions/tls-sync-vscode-workspace-extension'
      - key: 'tls-sync-vscode-extension-pack'
        vsixPath: 'dist/vsix/packaged.vsix'
        projectPath: '$(Build.SourcesDirectory)/vscode-extensions/tls-sync-vscode-extension-pack'
      - key: 'rush-vscode-extension'
        vsixPath: 'dist/vsix/packaged.vsix'
        projectPath: '$(Build.SourcesDirectory)/vscode-extensions/rush-vscode-extension'

resources:
  repositories:
    - repository: 1esPipelines
      type: git
      name: 1ESPipelineTemplates/1ESPipelineTemplates
      ref: refs/tags/release

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1esPipelines
  parameters:
    pool:
      name: Azure-Pipelines-1ESPT-ExDShared
      os: windows
    stages:
      - stage:
        jobs:
          - job:
            pool:
              name: publish-rushstack
              os: linux
            templateContext:
              outputs:
                - ${{ each extension in parameters.ExtensionPublishConfig }}:
                    - output: pipelineArtifact
                      artifactName: ${{ extension.key }}
                      targetPath: ${{ extension.projectPath }}/${{ extension.vsixPath }}
                      displayName: 'Publish Artifact: ${{ extension.key }}'

            steps:
              - checkout: self
                persistCredentials: true

              - template: /common/config/azure-pipelines/templates/install-node.yaml@self

              - template: /common/config/azure-pipelines/templates/build.yaml@self
                parameters:
                  BuildParameters: >
                    --to tag:vsix

              - ${{ if parameters.shouldPublish }}:
                  - ${{ each extension in parameters.ExtensionPublishConfig }}:
                      - task: AzureCLI@2
                        displayName: 'Publish VSIX: ${{ extension.key }}'
                        inputs:
                          azureSubscription: rushstack-vscode-publish
                          scriptType: 'bash'
                          scriptLocation: 'inlineScript'
                          inlineScript: |
                            node node_modules/@rushstack/heft-vscode-extension-rig/node_modules/@rushstack/heft-vscode-extension-plugin/node_modules/@vscode/vsce/vsce publish --no-dependencies --azure-credential --packagePath ${{ extension.vsixPath }}
                          workingDirectory: ${{ extension.projectPath }}
