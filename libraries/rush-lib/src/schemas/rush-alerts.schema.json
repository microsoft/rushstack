{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Rush rush-alerts.json file",
  "description": "This configuration file provides settings to rush alerts feature.",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "$schema": {
      "description": "Part of the JSON Schema standard, this optional keyword declares the URL of the schema that the file conforms to. Editors may download the schema and use it to perform syntax highlighting.",
      "type": "string"
    },

    "timezone": {
      "description": "Settings such as `startTime` and `endTime` will use this timezone.\n\nIf omitted, the default timezone is UTC (`+00:00`).",
      "type": "string"
    },
    "alerts": {
      "description": "An array of alert messages and conditions for triggering them.",
      "items": {
        "$ref": "#/definitions/IAlert"
      },
      "type": "array"
    }
  },
  "definitions": {
    "IAlert": {
      "type": "object",
      "properties": {
        "alertId": {
          "description": "The alertId is used to identify the alert.",
          "type": "string"
        },
        "title": {
          "description": "When the alert is displayed, this title will appear at the top of the message box. It should be a single line of text, as concise as possible.",
          "type": "string"
        },
        "message": {
          "description": "When the alert is displayed, this text appears in the message box.\n\nTo make the JSON file more readable, if the text is longer than one line, you can instead provide an array of strings that will be concatenated.\n\nYour text may contain newline characters, but generally this is unnecessary because word-wrapping is automatically applied.",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        "detailsUrl": {
          "description": "(OPTIONAL) To avoid spamming users, the `title` and `message` settings should be kept as concise as possible.\n\nIf you need to provide more detail, use this setting to print a hyperlink to a web page with further guidance.",
          "type": "string"
        },
        "startTime": {
          "description": "(OPTIONAL) If `startTime` is specified, then this alert will not be shown prior to that time.\n\nKeep in mind that the alert is not guaranteed to be shown at this time, or at all. Alerts are only displayed after a Rush command has triggered fetching of the latest rush-alerts.json configuration.\n\nAlso, display of alerts is throttled to avoid spamming the user with too many messages.\n\nIf you need to test your alert, set the environment variable `RUSH_ALERTS_DEBUG=1` to disable throttling.\n\nThe `startTime` should be specified as `YYYY-MM-DD HH:MM` using 24 hour time format, or else `YYYY-MM-DD` in which case the time part will be `00:00` (start of that day). The time zone is obtained from the `timezone` setting above.",
          "type": "string"
        },
        "endTime": {
          "description": "(OPTIONAL) This alert will not be shown if the current time is later than `endTime`.\n\nThe format is the same as `startTime`.",
          "type": "string"
        },
        "maximumDisplayInterval": {
          "description": "(OPTIONAL) Specifies the maximum frequency at which this alert can be displayed within a defined time period.\n\nOptions are:\n\n  \"always\" (default) - no limit on display frequency, \"monthly\" - display up to once per month, \"weekly\" - display up to once per week, \"daily\" - display up to once per day, \"hourly\" - display up to once per hour.",
          "enum": ["always", "monthly", "weekly", "daily", "hourly"]
        },
        "priority": {
          "description": "(OPTIONAL) Determines the order in which this alert is shown relative to other alerts, based on urgency.\n\nOptions are: \n\n \"high\" - displayed first, \"normal\" (default) - standard urgency, \"low\" - least urgency.",
          "enum": ["high", "normal", "low"]
        },
        "conditionScript": {
          "description": "(OPTIONAL) The filename of a script that determines whether this alert can be shown, found in the 'common/config/rush/alert-scripts' folder.\n\nThe script must define a CommonJS export named `canShowAlert` that returns a boolean value, for example:\n\n`module.exports.canShowAlert = function () { // (your logic goes here) return true; }`.\n\nRush will invoke this script with the working directory set to the monorepo root folder, with no guarantee that `rush install` has been run.\n\nTo ensure up-to-date alerts, Rush may fetch and checkout the 'common/config/rush-alerts' folder in an unpredictable temporary path. Therefore, your script should avoid importing dependencies from outside its folder, generally be kept as simple and reliable and quick as possible.\n\nFor more complex conditions, we suggest to design some other process that prepares a data file or environment variable that can be cheaply checked by your condition script.",
          "type": "string"
        }
      },
      "required": ["alertId", "title", "message"]
    }
  }
}
