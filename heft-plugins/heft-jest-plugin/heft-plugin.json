{
  "$schema": "https://developer.microsoft.com/json-schemas/heft/v0/heft-plugin.schema.json",

  "taskPlugins": [
    {
      "pluginName": "jest-plugin",
      "entryPoint": "./lib-commonjs/JestPlugin",
      "optionsSchema": "./lib-commonjs/schemas/heft-jest-plugin.schema.json",

      "parameterScope": "jest",
      "parameters": [
        {
          "longName": "--config",
          "parameterKind": "string",
          "argumentName": "RELATIVE_PATH",
          "description": "Use this parameter to control which Jest configuration file will be used to run Jest tests.  If not specified, it will default to \"config/jest.config.json\".  This corresponds to the \"--config\" parameter in Jest's documentation."
        },
        {
          "longName": "--debug-heft-reporter",
          "parameterKind": "flag",
          "description": "Normally Heft installs a custom Jest reporter so that test results are presented consistently with other task logging.  If you suspect a problem with the HeftJestReporter, specify \"--debug-heft-reporter\" to temporarily disable it so that you can compare with how Jest's default reporter would have presented it.  Include this output in your bug report.  Do not use \"--debug-heft-reporter\" in production."
        },
        {
          "longName": "--detect-open-handles",
          "parameterKind": "flag",
          "description": "Attempt to collect and print open handles preventing Jest from exiting cleanly.  This option has a significant performance penalty and should only be used for debugging.  This corresponds to the \"--detectOpenHandles\" parameter in Jest's documentation."
        },
        {
          "longName": "--disable-code-coverage",
          "parameterKind": "flag",
          "description": "Disable any configured code coverage.  If code coverage is not configured, this parameter has no effect."
        },
        {
          "longName": "--find-related-tests",
          "parameterKind": "stringList",
          "argumentName": "SOURCE_FILE",
          "description": "Find and run the tests that cover a source file that was passed in as an argument.  This corresponds to the \"--findRelatedTests\" parameter in Jest's documentation. This parameter is not compatible with watch mode."
        },
        {
          "longName": "--log-heap-usage",
          "parameterKind": "flag",
          "description": "Logs the heap usage after every test. Useful to debug memory leaks. Use together with --expose-gc in node."
        },
        {
          "longName": "--max-workers",
          "parameterKind": "string",
          "argumentName": "COUNT_OR_PERCENTAGE",
          "description": "Use this parameter to control maximum number of worker processes tests are allowed to use.  This parameter is similar to the parameter noted in the Jest documentation, and can either be an integer representing the number of workers to spawn when running tests, or can be a string representing a percentage of the available CPUs on the machine to utilize. Example values: \"3\", \"25%%\""
        },
        {
          "longName": "--silent",
          "parameterKind": "flag",
          "description": "Prevent tests from printing messages through the console.  This corresponds to the \"--silent\" parameter in Jest's documentation."
        },
        {
          "longName": "--test-name-pattern",
          "shortName": "-t",
          "parameterKind": "string",
          "argumentName": "REGEXP",
          "description": "Run only tests with a name that matches a regular expression.  The REGEXP is matched against the full name, which is a combination of the test name and all its surrounding describe blocks.  This corresponds to the \"--testNamePattern\" parameter in Jest's documentation."
        },
        {
          "longName": "--test-path-ignore-patterns",
          "parameterKind": "string",
          "argumentName": "REGEXP",
          "description": "Avoid running tests with a source file path that matches one ore more regular expressions.  On Windows you will need to use \"/\" instead of \"\\\".  This corresponds to the \"--testPathIgnorePatterns\" parameter in Jest's documentation."
        },
        {
          "longName": "--test-path-pattern",
          "parameterKind": "string",
          "argumentName": "REGEXP",
          "description": "Run only tests with a source file path that matches a regular expression.  On Windows you will need to use \"/\" instead of \"\\\".  This corresponds to the \"--testPathPattern\" parameter in Jest's documentation."
        },
        {
          "longName": "--test-timeout-ms",
          "parameterKind": "integer",
          "argumentName": "TIMEOUT",
          "description": "Change the default timeout for tests; if a test doesn't complete within this many milliseconds, it will fail.  Individual tests can override the default.  If unspecified, the default is normally 5000 ms.  This corresponds to the \"--testTimeout\" parameter in Jest's documentation."
        },
        {
          "longName": "--update-snapshots",
          "shortName": "-u",
          "parameterKind": "flag",
          "description": "Update Jest snapshots while running the tests.  This corresponds to the \"--updateSnapshots\" parameter in Jest."
        }
      ]
    }
  ]
}
