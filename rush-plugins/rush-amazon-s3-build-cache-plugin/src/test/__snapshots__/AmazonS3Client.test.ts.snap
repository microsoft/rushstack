// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AmazonS3Client Does not allow upload without credentials 1`] = `[Error: Credentials are required to upload objects to S3.]`;

exports[`AmazonS3Client Making requests Getting an object With credentials Can get an object 1`] = `
Array [
  "http://localhost:9000/abc123",
  Object {
    "headers": Object {
      "Authorization": "AWS4-HMAC-SHA256 Credential=accessKeyId/20200418/us-east-1/s3/aws4_request,SignedHeaders=host;x-amz-content-sha256;x-amz-date,Signature=194608e9e7ba6d8aa4a019b3b6fd237e6b09ef1f45ff7fa60cbb81c1875538be",
      "x-amz-content-sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "x-amz-date": "20200418T123242Z",
    },
    "verb": "GET",
  },
]
`;

exports[`AmazonS3Client Making requests Getting an object With credentials Can get an object from a different region 1`] = `
Array [
  "http://localhost:9000/abc123",
  Object {
    "headers": Object {
      "Authorization": "AWS4-HMAC-SHA256 Credential=accessKeyId/20200418/us-west-1/s3/aws4_request,SignedHeaders=host;x-amz-content-sha256;x-amz-date,Signature=fa88dc2c0877d83d442298fd51281eeffa1196436397832a794b89a079302d71",
      "x-amz-content-sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "x-amz-date": "20200418T123242Z",
    },
    "verb": "GET",
  },
]
`;

exports[`AmazonS3Client Making requests Getting an object With credentials Handles a 403 error 1`] = `
Array [
  "http://localhost:9000/abc123",
  Object {
    "headers": Object {
      "Authorization": "AWS4-HMAC-SHA256 Credential=accessKeyId/20200418/us-east-1/s3/aws4_request,SignedHeaders=host;x-amz-content-sha256;x-amz-date,Signature=194608e9e7ba6d8aa4a019b3b6fd237e6b09ef1f45ff7fa60cbb81c1875538be",
      "x-amz-content-sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "x-amz-date": "20200418T123242Z",
    },
    "verb": "GET",
  },
]
`;

exports[`AmazonS3Client Making requests Getting an object With credentials Handles a 403 error 2`] = `[Error: Amazon S3 responded with status code 403 (Unauthorized)]`;

exports[`AmazonS3Client Making requests Getting an object With credentials Handles a missing object 1`] = `
Array [
  "http://localhost:9000/abc123",
  Object {
    "headers": Object {
      "Authorization": "AWS4-HMAC-SHA256 Credential=accessKeyId/20200418/us-east-1/s3/aws4_request,SignedHeaders=host;x-amz-content-sha256;x-amz-date,Signature=194608e9e7ba6d8aa4a019b3b6fd237e6b09ef1f45ff7fa60cbb81c1875538be",
      "x-amz-content-sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "x-amz-date": "20200418T123242Z",
    },
    "verb": "GET",
  },
]
`;

exports[`AmazonS3Client Making requests Getting an object With credentials Handles an unexpected error 1`] = `
Array [
  "http://localhost:9000/abc123",
  Object {
    "headers": Object {
      "Authorization": "AWS4-HMAC-SHA256 Credential=accessKeyId/20200418/us-east-1/s3/aws4_request,SignedHeaders=host;x-amz-content-sha256;x-amz-date,Signature=194608e9e7ba6d8aa4a019b3b6fd237e6b09ef1f45ff7fa60cbb81c1875538be",
      "x-amz-content-sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "x-amz-date": "20200418T123242Z",
    },
    "verb": "GET",
  },
]
`;

exports[`AmazonS3Client Making requests Getting an object With credentials Handles an unexpected error 2`] = `[Error: Amazon S3 responded with status code 500 (Server Error)]`;

exports[`AmazonS3Client Making requests Getting an object With credentials including a session token Can get an object 1`] = `
Array [
  "http://localhost:9000/abc123",
  Object {
    "headers": Object {
      "Authorization": "AWS4-HMAC-SHA256 Credential=accessKeyId/20200418/us-east-1/s3/aws4_request,SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token,Signature=2a4b8f28b1bdd37af6bb0fd79212c223e2c28e4f94bfb5d1c94a16bb056d5624",
      "X-Amz-Security-Token": "sessionToken",
      "x-amz-content-sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "x-amz-date": "20200418T123242Z",
    },
    "verb": "GET",
  },
]
`;

exports[`AmazonS3Client Making requests Getting an object With credentials including a session token Can get an object from a different region 1`] = `
Array [
  "http://localhost:9000/abc123",
  Object {
    "headers": Object {
      "Authorization": "AWS4-HMAC-SHA256 Credential=accessKeyId/20200418/us-west-1/s3/aws4_request,SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token,Signature=c3e1597c716ad0146d1a0eca844194b3120f8d8f07cf0a2c402f0b4f2148de12",
      "X-Amz-Security-Token": "sessionToken",
      "x-amz-content-sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "x-amz-date": "20200418T123242Z",
    },
    "verb": "GET",
  },
]
`;

exports[`AmazonS3Client Making requests Getting an object With credentials including a session token Handles a 403 error 1`] = `
Array [
  "http://localhost:9000/abc123",
  Object {
    "headers": Object {
      "Authorization": "AWS4-HMAC-SHA256 Credential=accessKeyId/20200418/us-east-1/s3/aws4_request,SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token,Signature=2a4b8f28b1bdd37af6bb0fd79212c223e2c28e4f94bfb5d1c94a16bb056d5624",
      "X-Amz-Security-Token": "sessionToken",
      "x-amz-content-sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "x-amz-date": "20200418T123242Z",
    },
    "verb": "GET",
  },
]
`;

exports[`AmazonS3Client Making requests Getting an object With credentials including a session token Handles a 403 error 2`] = `[Error: Amazon S3 responded with status code 403 (Unauthorized)]`;

exports[`AmazonS3Client Making requests Getting an object With credentials including a session token Handles a missing object 1`] = `
Array [
  "http://localhost:9000/abc123",
  Object {
    "headers": Object {
      "Authorization": "AWS4-HMAC-SHA256 Credential=accessKeyId/20200418/us-east-1/s3/aws4_request,SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token,Signature=2a4b8f28b1bdd37af6bb0fd79212c223e2c28e4f94bfb5d1c94a16bb056d5624",
      "X-Amz-Security-Token": "sessionToken",
      "x-amz-content-sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "x-amz-date": "20200418T123242Z",
    },
    "verb": "GET",
  },
]
`;

exports[`AmazonS3Client Making requests Getting an object With credentials including a session token Handles an unexpected error 1`] = `
Array [
  "http://localhost:9000/abc123",
  Object {
    "headers": Object {
      "Authorization": "AWS4-HMAC-SHA256 Credential=accessKeyId/20200418/us-east-1/s3/aws4_request,SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token,Signature=2a4b8f28b1bdd37af6bb0fd79212c223e2c28e4f94bfb5d1c94a16bb056d5624",
      "X-Amz-Security-Token": "sessionToken",
      "x-amz-content-sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "x-amz-date": "20200418T123242Z",
    },
    "verb": "GET",
  },
]
`;

exports[`AmazonS3Client Making requests Getting an object With credentials including a session token Handles an unexpected error 2`] = `[Error: Amazon S3 responded with status code 500 (Server Error)]`;

exports[`AmazonS3Client Making requests Getting an object With credentials including a session token should not retry on 400 error 1`] = `
Array [
  "http://localhost:9000/abc123",
  Object {
    "headers": Object {
      "Authorization": "AWS4-HMAC-SHA256 Credential=accessKeyId/20200418/us-east-1/s3/aws4_request,SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token,Signature=2a4b8f28b1bdd37af6bb0fd79212c223e2c28e4f94bfb5d1c94a16bb056d5624",
      "X-Amz-Security-Token": "sessionToken",
      "x-amz-content-sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "x-amz-date": "20200418T123242Z",
    },
    "verb": "GET",
  },
]
`;

exports[`AmazonS3Client Making requests Getting an object With credentials including a session token should not retry on 400 error 2`] = `[Error: Amazon S3 responded with status code 400 (Bad Request)]`;

exports[`AmazonS3Client Making requests Getting an object With credentials including a session token should not retry on 401 error 1`] = `
Array [
  "http://localhost:9000/abc123",
  Object {
    "headers": Object {
      "Authorization": "AWS4-HMAC-SHA256 Credential=accessKeyId/20200418/us-east-1/s3/aws4_request,SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token,Signature=2a4b8f28b1bdd37af6bb0fd79212c223e2c28e4f94bfb5d1c94a16bb056d5624",
      "X-Amz-Security-Token": "sessionToken",
      "x-amz-content-sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "x-amz-date": "20200418T123242Z",
    },
    "verb": "GET",
  },
]
`;

exports[`AmazonS3Client Making requests Getting an object With credentials including a session token should not retry on 401 error 2`] = `[Error: Amazon S3 responded with status code 401 (Unauthorized)]`;

exports[`AmazonS3Client Making requests Getting an object With credentials should not retry on 400 error 1`] = `
Array [
  "http://localhost:9000/abc123",
  Object {
    "headers": Object {
      "Authorization": "AWS4-HMAC-SHA256 Credential=accessKeyId/20200418/us-east-1/s3/aws4_request,SignedHeaders=host;x-amz-content-sha256;x-amz-date,Signature=194608e9e7ba6d8aa4a019b3b6fd237e6b09ef1f45ff7fa60cbb81c1875538be",
      "x-amz-content-sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "x-amz-date": "20200418T123242Z",
    },
    "verb": "GET",
  },
]
`;

exports[`AmazonS3Client Making requests Getting an object With credentials should not retry on 400 error 2`] = `[Error: Amazon S3 responded with status code 400 (Bad Request)]`;

exports[`AmazonS3Client Making requests Getting an object With credentials should not retry on 401 error 1`] = `
Array [
  "http://localhost:9000/abc123",
  Object {
    "headers": Object {
      "Authorization": "AWS4-HMAC-SHA256 Credential=accessKeyId/20200418/us-east-1/s3/aws4_request,SignedHeaders=host;x-amz-content-sha256;x-amz-date,Signature=194608e9e7ba6d8aa4a019b3b6fd237e6b09ef1f45ff7fa60cbb81c1875538be",
      "x-amz-content-sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "x-amz-date": "20200418T123242Z",
    },
    "verb": "GET",
  },
]
`;

exports[`AmazonS3Client Making requests Getting an object With credentials should not retry on 401 error 2`] = `[Error: Amazon S3 responded with status code 401 (Unauthorized)]`;

exports[`AmazonS3Client Making requests Getting an object Without credentials Can get an object 1`] = `
Array [
  "http://localhost:9000/abc123",
  Object {
    "headers": Object {
      "x-amz-content-sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "x-amz-date": "20200418T123242Z",
    },
    "verb": "GET",
  },
]
`;

exports[`AmazonS3Client Making requests Getting an object Without credentials Can get an object from a different region 1`] = `
Array [
  "http://localhost:9000/abc123",
  Object {
    "headers": Object {
      "x-amz-content-sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "x-amz-date": "20200418T123242Z",
    },
    "verb": "GET",
  },
]
`;

exports[`AmazonS3Client Making requests Getting an object Without credentials Handles a missing object 1`] = `
Array [
  "http://localhost:9000/abc123",
  Object {
    "headers": Object {
      "x-amz-content-sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "x-amz-date": "20200418T123242Z",
    },
    "verb": "GET",
  },
]
`;

exports[`AmazonS3Client Making requests Getting an object Without credentials Handles an unexpected error 1`] = `
Array [
  "http://localhost:9000/abc123",
  Object {
    "headers": Object {
      "x-amz-content-sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "x-amz-date": "20200418T123242Z",
    },
    "verb": "GET",
  },
]
`;

exports[`AmazonS3Client Making requests Getting an object Without credentials Handles an unexpected error 2`] = `[Error: Amazon S3 responded with status code 500 (Server Error)]`;

exports[`AmazonS3Client Making requests Getting an object Without credentials Handles missing credentials object when 400 1`] = `
Array [
  "http://localhost:9000/abc123",
  Object {
    "headers": Object {
      "x-amz-content-sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "x-amz-date": "20200418T123242Z",
    },
    "verb": "GET",
  },
]
`;

exports[`AmazonS3Client Making requests Getting an object Without credentials Handles missing credentials object when 401 1`] = `
Array [
  "http://localhost:9000/abc123",
  Object {
    "headers": Object {
      "x-amz-content-sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "x-amz-date": "20200418T123242Z",
    },
    "verb": "GET",
  },
]
`;

exports[`AmazonS3Client Making requests Getting an object Without credentials Handles missing credentials object when 403 1`] = `
Array [
  "http://localhost:9000/abc123",
  Object {
    "headers": Object {
      "x-amz-content-sha256": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
      "x-amz-date": "20200418T123242Z",
    },
    "verb": "GET",
  },
]
`;

exports[`AmazonS3Client Making requests Uploading an object Throws an error if credentials are not provided 1`] = `[TypeError: Cannot read properties of undefined (reading 'body')]`;

exports[`AmazonS3Client Making requests Uploading an object With credentials Handles an unexpected error code 1`] = `
Array [
  "http://localhost:9000/abc123",
  Object {
    "body": Object {
      "data": Array [
        97,
        98,
        99,
        49,
        50,
        51,
        45,
        99,
        111,
        110,
        116,
        101,
        110,
        116,
        115,
      ],
      "type": "Buffer",
    },
    "headers": Object {
      "Authorization": "AWS4-HMAC-SHA256 Credential=accessKeyId/20200418/us-east-1/s3/aws4_request,SignedHeaders=host;x-amz-content-sha256;x-amz-date,Signature=1255739559ef86e1cc1e733fa9e13aa4990c6f1fb1ae821653540d401c48c5e1",
      "x-amz-content-sha256": "f8e4bdb2ca9c0f90b0fe56e32bf509ba44b73e2f52af123832f9ddbfe7e8fafa",
      "x-amz-date": "20200418T123242Z",
    },
    "verb": "PUT",
  },
]
`;

exports[`AmazonS3Client Making requests Uploading an object With credentials Handles an unexpected error code 2`] = `[Error: Amazon S3 responded with status code 500 (Server Error)]`;

exports[`AmazonS3Client Making requests Uploading an object With credentials Uploads an object 1`] = `
Array [
  "http://localhost:9000/abc123",
  Object {
    "body": Object {
      "data": Array [
        97,
        98,
        99,
        49,
        50,
        51,
        45,
        99,
        111,
        110,
        116,
        101,
        110,
        116,
        115,
      ],
      "type": "Buffer",
    },
    "headers": Object {
      "Authorization": "AWS4-HMAC-SHA256 Credential=accessKeyId/20200418/us-east-1/s3/aws4_request,SignedHeaders=host;x-amz-content-sha256;x-amz-date,Signature=1255739559ef86e1cc1e733fa9e13aa4990c6f1fb1ae821653540d401c48c5e1",
      "x-amz-content-sha256": "f8e4bdb2ca9c0f90b0fe56e32bf509ba44b73e2f52af123832f9ddbfe7e8fafa",
      "x-amz-date": "20200418T123242Z",
    },
    "verb": "PUT",
  },
]
`;

exports[`AmazonS3Client Making requests Uploading an object With credentials Uploads an object to a different region 1`] = `
Array [
  "http://localhost:9000/abc123",
  Object {
    "body": Object {
      "data": Array [
        97,
        98,
        99,
        49,
        50,
        51,
        45,
        99,
        111,
        110,
        116,
        101,
        110,
        116,
        115,
      ],
      "type": "Buffer",
    },
    "headers": Object {
      "Authorization": "AWS4-HMAC-SHA256 Credential=accessKeyId/20200418/us-west-1/s3/aws4_request,SignedHeaders=host;x-amz-content-sha256;x-amz-date,Signature=66e311b6c1987dd62cb3bfec416b9129c966d1d15075d1ebf852433062bf4281",
      "x-amz-content-sha256": "f8e4bdb2ca9c0f90b0fe56e32bf509ba44b73e2f52af123832f9ddbfe7e8fafa",
      "x-amz-date": "20200418T123242Z",
    },
    "verb": "PUT",
  },
]
`;

exports[`AmazonS3Client Making requests Uploading an object With credentials including a session token Handles an unexpected error code 1`] = `
Array [
  "http://localhost:9000/abc123",
  Object {
    "body": Object {
      "data": Array [
        97,
        98,
        99,
        49,
        50,
        51,
        45,
        99,
        111,
        110,
        116,
        101,
        110,
        116,
        115,
      ],
      "type": "Buffer",
    },
    "headers": Object {
      "Authorization": "AWS4-HMAC-SHA256 Credential=accessKeyId/20200418/us-east-1/s3/aws4_request,SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token,Signature=0ed8d55f5a3265d967092faf7e3ca7acd08ff3566651dc7c7363d60118c11528",
      "X-Amz-Security-Token": "sessionToken",
      "x-amz-content-sha256": "f8e4bdb2ca9c0f90b0fe56e32bf509ba44b73e2f52af123832f9ddbfe7e8fafa",
      "x-amz-date": "20200418T123242Z",
    },
    "verb": "PUT",
  },
]
`;

exports[`AmazonS3Client Making requests Uploading an object With credentials including a session token Handles an unexpected error code 2`] = `[Error: Amazon S3 responded with status code 500 (Server Error)]`;

exports[`AmazonS3Client Making requests Uploading an object With credentials including a session token Uploads an object 1`] = `
Array [
  "http://localhost:9000/abc123",
  Object {
    "body": Object {
      "data": Array [
        97,
        98,
        99,
        49,
        50,
        51,
        45,
        99,
        111,
        110,
        116,
        101,
        110,
        116,
        115,
      ],
      "type": "Buffer",
    },
    "headers": Object {
      "Authorization": "AWS4-HMAC-SHA256 Credential=accessKeyId/20200418/us-east-1/s3/aws4_request,SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token,Signature=0ed8d55f5a3265d967092faf7e3ca7acd08ff3566651dc7c7363d60118c11528",
      "X-Amz-Security-Token": "sessionToken",
      "x-amz-content-sha256": "f8e4bdb2ca9c0f90b0fe56e32bf509ba44b73e2f52af123832f9ddbfe7e8fafa",
      "x-amz-date": "20200418T123242Z",
    },
    "verb": "PUT",
  },
]
`;

exports[`AmazonS3Client Making requests Uploading an object With credentials including a session token Uploads an object to a different region 1`] = `
Array [
  "http://localhost:9000/abc123",
  Object {
    "body": Object {
      "data": Array [
        97,
        98,
        99,
        49,
        50,
        51,
        45,
        99,
        111,
        110,
        116,
        101,
        110,
        116,
        115,
      ],
      "type": "Buffer",
    },
    "headers": Object {
      "Authorization": "AWS4-HMAC-SHA256 Credential=accessKeyId/20200418/us-west-1/s3/aws4_request,SignedHeaders=host;x-amz-content-sha256;x-amz-date;x-amz-security-token,Signature=8e2cd7b6241780b51b1d15f428c43179d389b106be9a572e0def4cad6a5ba1e5",
      "X-Amz-Security-Token": "sessionToken",
      "x-amz-content-sha256": "f8e4bdb2ca9c0f90b0fe56e32bf509ba44b73e2f52af123832f9ddbfe7e8fafa",
      "x-amz-date": "20200418T123242Z",
    },
    "verb": "PUT",
  },
]
`;

exports[`AmazonS3Client Rejects invalid S3 endpoint values 1`] = `"A S3 endpoint must be provided"`;

exports[`AmazonS3Client Rejects invalid S3 endpoint values 2`] = `"The S3 endpoint must start with https:// or http://"`;

exports[`AmazonS3Client Rejects invalid S3 endpoint values 3`] = `"The path should be omitted from the endpoint. Use s3Prefix to specify a path"`;

exports[`AmazonS3Client Rejects invalid S3 endpoint values 4`] = `"Invalid S3 endpoint. Some part of the hostname contains invalid characters or is too long"`;

exports[`AmazonS3Client Rejects invalid S3 endpoint values 5`] = `"Invalid S3 endpoint. Some part of the hostname contains invalid characters or is too long"`;

exports[`AmazonS3Client Rejects invalid S3 endpoint values 6`] = `"Invalid S3 endpoint. Some part of the hostname contains invalid characters or is too long"`;

exports[`AmazonS3Client Rejects invalid S3 endpoint values 7`] = `"Invalid S3 endpoint. Some part of the hostname contains invalid characters or is too long"`;

exports[`AmazonS3Client Rejects invalid S3 endpoint values 8`] = `"Invalid S3 endpoint. Some part of the hostname contains invalid characters or is too long"`;

exports[`AmazonS3Client Rejects invalid S3 endpoint values 9`] = `"Invalid S3 endpoint. Some part of the hostname contains invalid characters or is too long"`;

exports[`AmazonS3Client Rejects invalid S3 endpoint values 10`] = `"Invalid S3 endpoint. Some part of the hostname contains invalid characters or is too long"`;

exports[`AmazonS3Client Rejects invalid S3 endpoint values 11`] = `"Invalid S3 endpoint. Some part of the hostname contains invalid characters or is too long"`;
